<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BothValue" xml:space="preserve">
    <value>補正した数値と元の数値を両方表示</value>
  </data>
  <data name="MOD_Description" xml:space="preserve">
    <value>DLC Industriesのバランスを調整して、渋滞の緩和や貨物の積載量の増加などを変更します。</value>
  </data>
  <data name="OriginalValue" xml:space="preserve">
    <value>補正した値のみ表示</value>
  </data>
  <data name="TooltipBoxMode" xml:space="preserve">
    <value>ツールチップボックスのモード</value>
  </data>
  <data name="UpdateLog_V0_1_0FIX" xml:space="preserve">
    <value>[FIX]車両数の間違った表示を修正</value>
  </data>
  <data name="UpdateLog_V0_1_0UPT1" xml:space="preserve">
    <value>[UPT]新しいアルゴリズムを使用して、産業エリア全般の再調整</value>
  </data>
  <data name="UpdateLog_V0_1_0UPT2" xml:space="preserve">
    <value>[UPT]最新のHarmony2 APIを使用</value>
  </data>
  <data name="UpdateLog_V0_2_0FIX" xml:space="preserve">
    <value>[FIX]一部の加工施設で、十分な販売先が無い・原料が不足するなどの不具合を修正</value>
  </data>
  <data name="UpdateLog_V0_2_0UPT" xml:space="preserve">
    <value>[UPT]バッファの認識方法と再結合のロジックを更新</value>
  </data>
  <data name="UpdateLog_V0_3_0FIX1" xml:space="preserve">
    <value>[FIX]バニラ以外の建物が正常に動作しない問題を修正</value>
  </data>
  <data name="UpdateLog_V0_3_0FIX2" xml:space="preserve">
    <value>[FIX]ワークスペースが正しくない不具合を修正</value>
  </data>
  <data name="UpdateLog_V0_3_0FIX3" xml:space="preserve">
    <value>[FIX]IMTとIPTの両MODで互換性の問題を修正</value>
  </data>
  <data name="UpdateLog_V0_3_0FIX4" xml:space="preserve">
    <value>[FIX]例外エラーが発生する問題を修正</value>
  </data>
  <data name="UpdateLog_V0_4_0FIX1" xml:space="preserve">
    <value>[FIX]ユニーク工場の維持費が正しくない問題を修正</value>
  </data>
  <data name="UpdateLog_V0_4_0FIX2" xml:space="preserve">
    <value>[FIX]建物にカーソルを合わせるとツールチップ上に、建設費・維持費・車両数・労働者数が正しく表示されない問題を修正</value>
  </data>
  <data name="UpdateLog_V0_5_0ADD" xml:space="preserve">
    <value>[ADD]ツールチップボックスのオプションを追加して、補正した数値と元の数値を両方表示</value>
  </data>
  <data name="UpdateLog_V0_5_0FIX1" xml:space="preserve">
    <value>[FIX]Fixed tooltip box for some buildings still not showing the corrected value.</value>
  </data>
  <data name="UpdateLog_V0_5_0FIX2" xml:space="preserve">
    <value>[FIX]Fixed worker levelup requirements are too high issues.</value>
  </data>
  <data name="ValueWarning" xml:space="preserve">
    <value>補正した値と元の値を両方表示: 補正した値 (オリジナルの値) ｰ このオプションはゲームの開始前に設定するか、またはセーブ/ロードの前に設定して下さい。</value>
  </data>
</root>